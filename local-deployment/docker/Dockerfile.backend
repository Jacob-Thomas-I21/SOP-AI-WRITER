# Multi-stage Dockerfile for Pharmaceutical SOP Author Backend
FROM python:3.11-slim as builder

# Set build arguments
ARG APP_VERSION=1.0.0
ARG BUILD_DATE
ARG VCS_REF

# Set labels for pharmaceutical compliance
LABEL maintainer="Pharmaceutical SOP Development Team"
LABEL version=$APP_VERSION
LABEL description="Pharmaceutical SOP Author Backend API with FDA compliance"
LABEL build-date=$BUILD_DATE
LABEL vcs-ref=$VCS_REF
LABEL pharmaceutical.compliance="FDA-21-CFR-Part-11"
LABEL gmp.validated="true"
LABEL data.integrity="ALCOA+"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better layer caching
COPY backend/requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r pharmaceutical && \
    useradd -r -g pharmaceutical -d /app -s /bin/bash pharmaceutical && \
    mkdir -p /app /app/logs /app/uploads /app/pdfs /app/cache && \
    chown -R pharmaceutical:pharmaceutical /app

# Set working directory
WORKDIR /app

# Copy Python packages from builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY --chown=pharmaceutical:pharmaceutical backend/ .

# Create directories with proper permissions
RUN mkdir -p logs uploads pdfs cache templates/pdf && \
    chmod 755 logs uploads pdfs cache templates/pdf && \
    chown -R pharmaceutical:pharmaceutical /app

# Switch to non-root user
USER pharmaceutical

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PHARMACEUTICAL_ENVIRONMENT=production
ENV FDA_COMPLIANCE_MODE=enabled
ENV GMP_VALIDATION=true
ENV DATA_INTEGRITY_LEVEL=high

# Health check for pharmaceutical compliance monitoring
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:9000/health || exit 1

# Expose port
EXPOSE 9000

# Add pharmaceutical compliance startup script
COPY --chown=pharmaceutical:pharmaceutical local-deployment/scripts/start-backend.sh /app/start-backend.sh
RUN chmod +x /app/start-backend.sh

# Start command
CMD ["/app/start-backend.sh"]